//
//  CCPhone.m
//  Autogenerated by plank
//
//  DO NOT EDIT - EDITS WILL BE OVERWRITTEN
//  @generated
//

#import "CCPhone.h"

struct CCPhoneDirtyProperties {
    unsigned int CCPhoneDirtyPropertyCreatedAt:1;
    unsigned int CCPhoneDirtyPropertyExtension:1;
    unsigned int CCPhoneDirtyPropertyIdentifier:1;
    unsigned int CCPhoneDirtyPropertyIsPrimary:1;
    unsigned int CCPhoneDirtyPropertyNumber:1;
    unsigned int CCPhoneDirtyPropertyType:1;
    unsigned int CCPhoneDirtyPropertyUpdatedAt:1;
};

@interface CCPhone ()
@property (nonatomic, assign, readwrite) struct CCPhoneDirtyProperties phoneDirtyProperties;
@end

@interface CCPhoneBuilder ()
@property (nonatomic, assign, readwrite) struct CCPhoneDirtyProperties phoneDirtyProperties;
@end

@implementation CCPhone
+ (NSString *)className
{
    return @"CCPhone";
}
+ (NSString *)polymorphicTypeIdentifier
{
    return @"phone";
}
+ (instancetype)modelObjectWithDictionary:(NSDictionary *)dictionary
{
    return [[self alloc] initWithModelDictionary:dictionary];
}
- (instancetype)init
{
    return [self initWithModelDictionary:@{}];
}
- (instancetype)initWithModelDictionary:(NS_VALID_UNTIL_END_OF_SCOPE NSDictionary *)modelDictionary
{
    NSParameterAssert(modelDictionary);
    if (!modelDictionary) {
        return self;
    }
    if (!(self = [super init])) {
        return self;
    }
        {
            __unsafe_unretained id value = modelDictionary[@"created_at"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_createdAt = [[NSValueTransformer valueTransformerForName:kPlankDateValueTransformerKey] transformedValue:value];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"extension"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_extension = [value copy];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyExtension = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"id"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_identifier = [value integerValue];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"is_primary"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_isPrimary = [value boolValue];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"number"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_number = [value copy];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyNumber = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"type"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_type = [value copy];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyType = 1;
            }
        }
        {
            __unsafe_unretained id value = modelDictionary[@"updated_at"]; // Collection will retain.
            if (value != nil) {
                if (value != (id)kCFNull) {
                    self->_updatedAt = [[NSValueTransformer valueTransformerForName:kPlankDateValueTransformerKey] transformedValue:value];
                }
                self->_phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt = 1;
            }
        }
    if ([self class] == [CCPhone class]) {
        [[NSNotificationCenter defaultCenter] postNotificationName:kPlankDidInitializeNotification object:self userInfo:@{ kPlankInitTypeKey : @(PlankModelInitTypeDefault) }];
    }
    return self;
}
- (instancetype)initWithBuilder:(CCPhoneBuilder *)builder
{
    NSParameterAssert(builder);
    return [self initWithBuilder:builder initType:PlankModelInitTypeDefault];
}
- (instancetype)initWithBuilder:(CCPhoneBuilder *)builder initType:(PlankModelInitType)initType
{
    NSParameterAssert(builder);
    if (!(self = [super init])) {
        return self;
    }
    _createdAt = builder.createdAt;
    _extension = builder.extension;
    _identifier = builder.identifier;
    _isPrimary = builder.isPrimary;
    _number = builder.number;
    _type = builder.type;
    _updatedAt = builder.updatedAt;
    _phoneDirtyProperties = builder.phoneDirtyProperties;
    if ([self class] == [CCPhone class]) {
        [[NSNotificationCenter defaultCenter] postNotificationName:kPlankDidInitializeNotification object:self userInfo:@{ kPlankInitTypeKey : @(initType) }];
    }
    return self;
}
- (NSString *)debugDescription
{
    NSArray<NSString *> *parentDebugDescription = [[super debugDescription] componentsSeparatedByString:@"\n"];
    NSMutableArray *descriptionFields = [NSMutableArray arrayWithCapacity:7];
    [descriptionFields addObject:parentDebugDescription];
    struct CCPhoneDirtyProperties props = _phoneDirtyProperties;
    if (props.CCPhoneDirtyPropertyCreatedAt) {
        [descriptionFields addObject:[@"_createdAt = " stringByAppendingFormat:@"%@", _createdAt]];
    }
    if (props.CCPhoneDirtyPropertyExtension) {
        [descriptionFields addObject:[@"_extension = " stringByAppendingFormat:@"%@", _extension]];
    }
    if (props.CCPhoneDirtyPropertyIdentifier) {
        [descriptionFields addObject:[@"_identifier = " stringByAppendingFormat:@"%@", @(_identifier)]];
    }
    if (props.CCPhoneDirtyPropertyIsPrimary) {
        [descriptionFields addObject:[@"_isPrimary = " stringByAppendingFormat:@"%@", @(_isPrimary)]];
    }
    if (props.CCPhoneDirtyPropertyNumber) {
        [descriptionFields addObject:[@"_number = " stringByAppendingFormat:@"%@", _number]];
    }
    if (props.CCPhoneDirtyPropertyType) {
        [descriptionFields addObject:[@"_type = " stringByAppendingFormat:@"%@", _type]];
    }
    if (props.CCPhoneDirtyPropertyUpdatedAt) {
        [descriptionFields addObject:[@"_updatedAt = " stringByAppendingFormat:@"%@", _updatedAt]];
    }
    return [NSString stringWithFormat:@"CCPhone = {\n%@\n}", debugDescriptionForFields(descriptionFields)];
}
- (instancetype)copyWithBlock:(PLANK_NOESCAPE void (^)(CCPhoneBuilder *builder))block
{
    NSParameterAssert(block);
    CCPhoneBuilder *builder = [[CCPhoneBuilder alloc] initWithModel:self];
    block(builder);
    return [builder build];
}
- (BOOL)isEqual:(id)anObject
{
    if (self == anObject) {
        return YES;
    }
    if ([anObject isKindOfClass:[CCPhone class]] == NO) {
        return NO;
    }
    return [self isEqualToPhone:anObject];
}
- (BOOL)isEqualToPhone:(CCPhone *)anObject
{
    return (
        (anObject != nil) &&
        (_isPrimary == anObject.isPrimary) &&
        (_identifier == anObject.identifier) &&
        (_createdAt == anObject.createdAt || [_createdAt isEqualToDate:anObject.createdAt]) &&
        (_extension == anObject.extension || [_extension isEqualToString:anObject.extension]) &&
        (_number == anObject.number || [_number isEqualToString:anObject.number]) &&
        (_type == anObject.type || [_type isEqualToString:anObject.type]) &&
        (_updatedAt == anObject.updatedAt || [_updatedAt isEqualToDate:anObject.updatedAt])
    );
}
- (NSUInteger)hash
{
    NSUInteger subhashes[] = {
        17,
        [_createdAt hash],
        [_extension hash],
        (NSUInteger)_identifier,
        (_isPrimary ? 1231 : 1237),
        [_number hash],
        [_type hash],
        [_updatedAt hash]
    };
    return PINIntegerArrayHash(subhashes, sizeof(subhashes) / sizeof(subhashes[0]));
}
- (instancetype)mergeWithModel:(CCPhone *)modelObject
{
    return [self mergeWithModel:modelObject initType:PlankModelInitTypeFromMerge];
}
- (instancetype)mergeWithModel:(CCPhone *)modelObject initType:(PlankModelInitType)initType
{
    NSParameterAssert(modelObject);
    CCPhoneBuilder *builder = [[CCPhoneBuilder alloc] initWithModel:self];
    [builder mergeWithModel:modelObject];
    return [[CCPhone alloc] initWithBuilder:builder initType:initType];
}
- (NSDictionary *)dictionaryObjectRepresentation
{
    NSMutableDictionary *dict = [[NSMutableDictionary alloc] initWithCapacity:7];
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt) {
        if (_createdAt != (id)kCFNull) {
            NSValueTransformer *valueTransformer = [NSValueTransformer valueTransformerForName:kPlankDateValueTransformerKey];
            if ([[valueTransformer class] allowsReverseTransformation]) {
                [dict setObject:[valueTransformer reverseTransformedValue:_createdAt] forKey:@"created_at"];
            } else {
                [dict setObject:[NSNull null] forKey:@"created_at"];
            }
        } else {
            [dict setObject:[NSNull null] forKey:@"created_at"];
        }
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyExtension) {
        if (_extension != (id)kCFNull) {
            [dict setObject:_extension forKey:@"extension"];
        } else {
            [dict setObject:[NSNull null] forKey:@"extension"];
        }
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier) {
        [dict setObject:@(_identifier) forKey: @"id"];
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary) {
        [dict setObject:@(_isPrimary) forKey: @"is_primary"];
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyNumber) {
        if (_number != (id)kCFNull) {
            [dict setObject:_number forKey:@"number"];
        } else {
            [dict setObject:[NSNull null] forKey:@"number"];
        }
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyType) {
        if (_type != (id)kCFNull) {
            [dict setObject:_type forKey:@"type"];
        } else {
            [dict setObject:[NSNull null] forKey:@"type"];
        }
    }
    if (_phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt) {
        if (_updatedAt != (id)kCFNull) {
            NSValueTransformer *valueTransformer = [NSValueTransformer valueTransformerForName:kPlankDateValueTransformerKey];
            if ([[valueTransformer class] allowsReverseTransformation]) {
                [dict setObject:[valueTransformer reverseTransformedValue:_updatedAt] forKey:@"updated_at"];
            } else {
                [dict setObject:[NSNull null] forKey:@"updated_at"];
            }
        } else {
            [dict setObject:[NSNull null] forKey:@"updated_at"];
        }
    }
    return dict;
}
#pragma mark - NSCopying
- (id)copyWithZone:(NSZone *)zone
{
    return self;
}
#pragma mark - NSSecureCoding
+ (BOOL)supportsSecureCoding
{
    return YES;
}
- (instancetype)initWithCoder:(NSCoder *)aDecoder
{
    if (!(self = [super init])) {
        return self;
    }
    _createdAt = [aDecoder decodeObjectOfClass:[NSDate class] forKey:@"created_at"];
    _extension = [aDecoder decodeObjectOfClass:[NSString class] forKey:@"extension"];
    _identifier = [aDecoder decodeIntegerForKey:@"id"];
    _isPrimary = [aDecoder decodeBoolForKey:@"is_primary"];
    _number = [aDecoder decodeObjectOfClass:[NSString class] forKey:@"number"];
    _type = [aDecoder decodeObjectOfClass:[NSString class] forKey:@"type"];
    _updatedAt = [aDecoder decodeObjectOfClass:[NSDate class] forKey:@"updated_at"];
    _phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt = [aDecoder decodeIntForKey:@"created_at_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyExtension = [aDecoder decodeIntForKey:@"extension_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier = [aDecoder decodeIntForKey:@"id_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary = [aDecoder decodeIntForKey:@"is_primary_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyNumber = [aDecoder decodeIntForKey:@"number_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyType = [aDecoder decodeIntForKey:@"type_dirty_property"] & 0x1;
    _phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt = [aDecoder decodeIntForKey:@"updated_at_dirty_property"] & 0x1;
    if ([self class] == [CCPhone class]) {
        [[NSNotificationCenter defaultCenter] postNotificationName:kPlankDidInitializeNotification object:self userInfo:@{ kPlankInitTypeKey : @(PlankModelInitTypeDefault) }];
    }
    return self;
}
- (void)encodeWithCoder:(NSCoder *)aCoder
{
    [aCoder encodeObject:self.createdAt forKey:@"created_at"];
    [aCoder encodeObject:self.extension forKey:@"extension"];
    [aCoder encodeInteger:self.identifier forKey:@"id"];
    [aCoder encodeBool:self.isPrimary forKey:@"is_primary"];
    [aCoder encodeObject:self.number forKey:@"number"];
    [aCoder encodeObject:self.type forKey:@"type"];
    [aCoder encodeObject:self.updatedAt forKey:@"updated_at"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt forKey:@"created_at_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyExtension forKey:@"extension_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier forKey:@"id_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary forKey:@"is_primary_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyNumber forKey:@"number_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyType forKey:@"type_dirty_property"];
    [aCoder encodeInt:_phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt forKey:@"updated_at_dirty_property"];
}
@end

@implementation CCPhoneBuilder
- (instancetype)initWithModel:(CCPhone *)modelObject
{
    NSParameterAssert(modelObject);
    if (!(self = [super init])) {
        return self;
    }
    struct CCPhoneDirtyProperties phoneDirtyProperties = modelObject.phoneDirtyProperties;
    if (phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt) {
        _createdAt = modelObject.createdAt;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyExtension) {
        _extension = modelObject.extension;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier) {
        _identifier = modelObject.identifier;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary) {
        _isPrimary = modelObject.isPrimary;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyNumber) {
        _number = modelObject.number;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyType) {
        _type = modelObject.type;
    }
    if (phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt) {
        _updatedAt = modelObject.updatedAt;
    }
    _phoneDirtyProperties = phoneDirtyProperties;
    return self;
}
- (CCPhone *)build
{
    return [[CCPhone alloc] initWithBuilder:self];
}
- (void)mergeWithModel:(CCPhone *)modelObject
{
    NSParameterAssert(modelObject);
    CCPhoneBuilder *builder = self;
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt) {
        builder.createdAt = modelObject.createdAt;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyExtension) {
        builder.extension = modelObject.extension;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier) {
        builder.identifier = modelObject.identifier;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary) {
        builder.isPrimary = modelObject.isPrimary;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyNumber) {
        builder.number = modelObject.number;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyType) {
        builder.type = modelObject.type;
    }
    if (modelObject.phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt) {
        builder.updatedAt = modelObject.updatedAt;
    }
}
- (void)setCreatedAt:(NSDate *)createdAt
{
    _createdAt = [createdAt copy];
    _phoneDirtyProperties.CCPhoneDirtyPropertyCreatedAt = 1;
}
- (void)setExtension:(NSString *)extension
{
    _extension = [extension copy];
    _phoneDirtyProperties.CCPhoneDirtyPropertyExtension = 1;
}
- (void)setIdentifier:(NSInteger)identifier
{
    _identifier = identifier;
    _phoneDirtyProperties.CCPhoneDirtyPropertyIdentifier = 1;
}
- (void)setIsPrimary:(BOOL)isPrimary
{
    _isPrimary = isPrimary;
    _phoneDirtyProperties.CCPhoneDirtyPropertyIsPrimary = 1;
}
- (void)setNumber:(NSString *)number
{
    _number = [number copy];
    _phoneDirtyProperties.CCPhoneDirtyPropertyNumber = 1;
}
- (void)setType:(NSString *)type
{
    _type = [type copy];
    _phoneDirtyProperties.CCPhoneDirtyPropertyType = 1;
}
- (void)setUpdatedAt:(NSDate *)updatedAt
{
    _updatedAt = [updatedAt copy];
    _phoneDirtyProperties.CCPhoneDirtyPropertyUpdatedAt = 1;
}
@end
